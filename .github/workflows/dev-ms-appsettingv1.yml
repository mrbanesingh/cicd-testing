name: Build and Push Docker Image to ECR and Deploy K8S Cluster ok

on:
  push:
    branches:
      - cicd-testing

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Check Working Directory
      run: |
        pwd
        ls -la # List files in the current directory

    - name: Install Java 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt' 

    - name: Install Dependencies
      run: npm install

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to AWS ECR
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_REGISTRY }}

    - name: Build Docker image
      run: |
        docker build -t ${{ secrets.IMAGE_REPO_NAME }}:${{ secrets.IMAGE_TAG }} .
        docker tag ${{ secrets.IMAGE_REPO_NAME }}:${{ secrets.IMAGE_TAG }} ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.IMAGE_REPO_NAME }}:${{ secrets.IMAGE_TAG }}

    - name: Push Docker image to ECR
      run: |
        docker push ${{ secrets.AWS_ECR_REGISTRY }}/${{ secrets.IMAGE_REPO_NAME }}:${{ secrets.IMAGE_TAG }}

    - name: Log out of AWS ECR
      run: |
        docker logout ${{ secrets.AWS_ECR_REGISTRY }}

  deploy-on-k8s-cluster:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to AWS ECR
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_REGISTRY }}
    
    - name: Set permissions for private key
      run: |
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > key.pem
        chmod 400 key.pem

    - name: Copy deployment.yml to EC2 instance
      env:
        DEPLOYMENT_FILE: dev-appsetting-deployment.yml
      run: |
        scp -i key.pem -o StrictHostKeyChecking=no /home/runner/work/cicd-testing/cicd-testing/$DEPLOYMENT_FILE ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/$DEPLOYMENT_FILE

    - name: Deploy to Kubernetes cluster
      env:
        DEPLOYMENT_FILE: dev-appsetting-deployment.yml
      run: |
        ssh -i key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "kubectl apply -f /home/${{ secrets.EC2_USER }}/$DEPLOYMENT_FILE"
